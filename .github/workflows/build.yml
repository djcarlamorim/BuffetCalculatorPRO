name: Build APK with Buildozer

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # Aumentei o timeout para builds mais longos

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-pip \
          build-essential \
          libssl-dev \
          libffi-dev \
          python3-dev \
          zip \
          unzip \
          openjdk-17-jdk \  # Java 17 é mais compatível com versões recentes do Android
          zlib1g-dev \
          ccache \
          git

        pip install --upgrade pip wheel setuptools
        pip install buildozer cython virtualenv

    - name: Set up Android SDK
      run: |
        # Criar estrutura de diretórios correta para o SDK
        mkdir -p $HOME/android-sdk/cmdline-tools/latest
        cd $HOME/android-sdk/cmdline-tools/latest
        
        # Baixar Command Line Tools mais recentes
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip
        rm cmdline-tools.zip

        # Configurar variáveis de ambiente
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_ENV

        # Aceitar licenças
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

        # Instalar componentes necessários
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
          "platform-tools" \
          "build-tools;34.0.0" \
          "platforms;android-33" \
          "ndk;25.1.8937393"

    - name: Configure Buildozer
      run: |
        # Criar diretório para o build se não existir
        mkdir -p $GITHUB_WORKSPACE/build
        cd $GITHUB_WORKSPACE/build
        
        # Inicializar Buildozer se não houver arquivo .spec
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi
        
        # Copiar seu arquivo .spec existente se necessário
        if [ -f $GITHUB_WORKSPACE/windows_build/buildozer.spec ]; then
          cp $GITHUB_WORKSPACE/windows_build/buildozer.spec .
        fi

    - name: Run Buildozer
      run: |
        cd $GITHUB_WORKSPACE/build
        buildozer -v android clean
        buildozer -v android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-apk
        path: $GITHUB_WORKSPACE/build/bin/*.apk
